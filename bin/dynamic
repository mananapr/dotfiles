#!/usr/bin/python

import subprocess
from pathlib import Path
import json
import pickle
import time
import threading

OUT = f"{Path.home()}/.config/hypr/dynamic_out.txt"
# PREV_PATH = f"{Path.home()}/.config/hypr/store/prev.txt"
prev = None

def print(ar):
    with open(OUT,"w") as f:
        f.write(json.dumps(ar))

# with open(f"{Path.home()}/.config/hypr/im_here","w") as f:
#     f.write("")

global PAUSE_MEDIA
PAUSE_MEDIA = False

def notif_watcher():
    process = subprocess.Popen(
        ["playerctl", "-p", "mpv", "metadata", "--format", '"{{lc(status)}}"'],
         stdout=subprocess.PIPE
    )
    status = process.stdout.readline().decode("utf-8").strip().replace('"','')
    process = subprocess.Popen(
        ["playerctl", "-p", "mpv", "metadata", "--format", '"{{title}} - {{artist}}"'],
         stdout=subprocess.PIPE
    )
    print(json.dumps({"class":"none","text":""}))
    line = process.stdout.readline().decode("utf-8").strip()
    dat = {}
    if status == 'playing':
        dat["text"] = '  ' + line.replace('"','')
    else:
        dat["text"] = '  ' + line.replace('"','')
    dat["tooltip"] = "Now Playing: " + line
    dat["class"] = status
    if status:
        print(dat)
    else:
        print({"class":"none","text":""})

def start_watcher():
    while 1:
        notif_watcher()
        time.sleep(5)

def debug():
    while 1:
        print(PAUSE_MEDIA)
        time.sleep(0.5)
t = threading.Thread(target=start_watcher)
d = threading.Thread(target=debug)
t.start()
# d.start()
t.join()
# d.join()
